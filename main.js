/*
Multiples of 3 and 5
Problem 1
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.

answer = 233168
*/

function multiples35() {
  let sum = 0;
  for (var i = 0; i < 1000; i++) {
    if (i%3 === 0 || i%5 === 0) {
      sum+=i;
    }
  }
  return sum;
}


/*
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

answer = 4613732
*/

function fibonacci() {
  let array = [1, 2];
  let sum = 0;
  while (array[array.length - 1] < 4000000) {
    array.push(array[array.length - 1] + array[array.length - 2]);
  }
  for (var i = 0; i < array.length; i++) {
    if (array[i]%2 === 0) {
      sum = sum + array[i];
    }
  }
  return sum;
}


/*
Largest prime factor
Problem 3
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?

answer =

*/


function primeNumbers(num) {
  let primes = [];
  return primes;
}

function primeFactors(num) {

  let sum = 0;
  return sum;
}

// console.log(primeFactors());

/*
Largest palindrome product
Problem 4
A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.

Find the largest palindrome made from the product of two 3-digit numbers.

answer = 906609
*/


function palindrome() {
  let dromes = [];
  for (var i = 999; i > 99; i--) {
    for (var j = 999; j > 99; j--) {
      let num = i * j;
      if (num.toString().split("").join("") === num.toString().split("").reverse().join("")){
        dromes.push(num);
      }
    }
  }
  return Math.max.apply(null, dromes);
}
